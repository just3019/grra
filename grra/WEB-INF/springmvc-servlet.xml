<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"  
    xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:p="http://www.springframework.org/schema/p"  
    xmlns:context="http://www.springframework.org/schema/context"  
    xmlns:mvc="http://www.springframework.org/schema/mvc"  
    xsi:schemaLocation="   
           http://www.springframework.org/schema/beans   
           http://www.springframework.org/schema/beans/spring-beans-3.0.xsd   
           http://www.springframework.org/schema/context   
           http://www.springframework.org/schema/context/spring-context-3.0.xsd  
           http://www.springframework.org/schema/mvc   
           http://www.springframework.org/schema/mvc/spring-mvc-3.2.xsd">
           
    <!-- 配置js，css等静态文件直接映射到对应的文件夹，不被DispatcherServlet处理 
	location 访问地址 
    -->
    <mvc:resources location="/styles/" mapping="/styles/**"/>
    <mvc:resources location="/scripts/" mapping="/scripts/**"/>
    <mvc:resources location="/images/" mapping="/images/**"/>
    <mvc:resources location="/fonts/" mapping="/fonts/**"/>
    <mvc:resources location="/sass/" mapping="/sass/**"/>
    
    <!-- 启动扫描所有的controller -->
    <context:component-scan base-package="com.slh.grra.web.controller"/>
    
    <!--  主要作用于@Controller，激活该模式
        
    	下面是一种简写形式，完全可以手动配置替代这种简写形式；
    	 它会自动注册DefaultAnnotationHandlerMapping与AnnotationMethodHandlerAdapter 两个bean,
    	   是spring MVC为@Controllers分发请求所必须的
     -->
    <mvc:annotation-driven/>
    
    
     <bean id="handlerMapping"
		class="org.springframework.web.servlet.mvc.annotation.DefaultAnnotationHandlerMapping"/>
	<bean id="handlerAdapter"
		class="org.springframework.web.servlet.mvc.annotation.AnnotationMethodHandlerAdapter">
		<property name="cacheSeconds" value="0" />  
        <property name="webBindingInitializer">  
            <bean class="com.slh.core.filter.MyWebBinding" />  
        </property>
		<property name="messageConverters">
			<list>
				<bean
					class="org.springframework.http.converter.StringHttpMessageConverter">
					<property name="supportedMediaTypes">
						<list>
							<value>text/html;charset=UTF-8</value>
						</list>
					</property>
				</bean>
			</list>
		</property>
	</bean>
	<bean id="multipartResolver"
		class="org.springframework.web.multipart.commons.CommonsMultipartResolver">
		<property name="maxUploadSize" value="100000000" />
		<property name="maxInMemorySize">
			<value>4096</value>
		</property>
	</bean>
    
    <!--
     		  配置/WEB-INF/views/目录里面的jsp文件不被DispatcherServlet处理，可以直接通过浏览器访问。
       view-name  /WEB-INF/views/里面的jsp文件名(不许后缀即可)
       path  访问地址
    --> 
    <mvc:view-controller path="/header" view-name="header"/>

    <!-- jsp页面解析器，当Controller返回XXX字符串时，先通过拦截器，然后该类就会在/WEB-INF/views/目录下，查找XXX.jsp文件-->
    <bean class="org.springframework.web.servlet.view.InternalResourceViewResolver">
    	<property name="viewClass"
			value="org.springframework.web.servlet.view.JstlView" />
    	<property name="prefix" value=""></property>
    	<property name="suffix" value=""></property>
    </bean>
    
      <!--配置拦截器, 多个拦截器,顺序执行 -->
    <!-- <mvc:interceptors>  
        <mvc:interceptor>  
            匹配的是url路径， 如果不配置或/**,将拦截所有的Controller
            <mvc:mapping path="/member/**" /> 
            
            <bean class="com.slh.grra.web.interceptor.CommonInterceptor"></bean>  
        </mvc:interceptor>
        当设置多个拦截器时，先按顺序调用preHandle方法，然后逆序调用每个拦截器的postHandle和afterCompletion方法
    </mvc:interceptors> -->

    
    
</beans>